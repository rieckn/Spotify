{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rieck\\\\Documents\\\\Coding\\\\Spotify\\\\client\\\\src\\\\Components\\\\Selector.js\";\nimport React, { useState } from 'react'; //Bootstrap\n\nimport Button from 'react-bootstrap/Button';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport Form from 'react-bootstrap/Form';\nimport ListGroupItem from 'react-bootstrap/esm/ListGroupItem';\n\nfunction Selector(props) {\n  const [elements, setElements] = useState([]);\n\n  function addElement() {\n    setElements(elements.concat([\"\"]));\n    props.setCount(props.count + 1);\n  }\n\n  function changePlaceholder(newPlaceholder, index) {\n    let newElements = [...elements];\n    newElements[index] = newPlaceholder;\n    setElements(newElements);\n    setList(newElements);\n  }\n\n  function removeElement(index) {\n    let newElements = [...elements];\n    newElements.splice(index, 1);\n    setElements(newElements);\n    setList(newElements);\n    props.setCount(props.count - 1);\n  }\n\n  function changeValue(value, index) {\n    let newElements = [...elements];\n    newElements[index] = value;\n    setElements(newElements);\n    searchRecommendations(value);\n  }\n\n  function setList(newElements) {\n    let newList = [...props.list];\n\n    if (props.title === \"Song\") {\n      newList[0] = newElements;\n      props.setList(newList);\n    } else if (props.title === \"Artist\") {\n      newList[1] = newElements;\n      props.setList(newList);\n    } else if (props.title === \"Genre\") {\n      newList[2] = newElements;\n      props.setList(newList);\n    }\n  }\n\n  function displayElements() {\n    return elements.map((element, index) => /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      class: \"input-group mb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      class: \"form-control\",\n      placeholder: props.title + \" name\",\n      value: element,\n      \"aria-label\": \"Recipient's username\",\n      \"aria-describedby\": \"basic-addon2\",\n      onChange: e => changeValue(e.target.value, index),\n      onBlur: e => changePlaceholder(e.target.value, index),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      class: \"input-group-append\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      class: \"btn btn-outline-secondary\",\n      type: \"button\",\n      onClick: e => removeElement(index),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 29\n      }\n    }, \"X\"))), /*#__PURE__*/React.createElement(ListGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 21\n      }\n    }, searchRecs())));\n  }\n\n  function searchRecs() {\n    return props.recs.map(element => /*#__PURE__*/React.createElement(ListGroupItem, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }\n    }, element));\n  }\n\n  function searchRecommendations(searchVal) {\n    if (searchVal != \"\") {\n      let resultArray = [];\n\n      if (props.title === \"Song\") {\n        const testParams = {\n          limit: 5\n        };\n        props.spotify.search(searchVal, [\"track\"], testParams).then(response => {\n          console.log(response.tracks.items);\n          response.tracks.items.map((item, index) => {\n            resultArray.push(item.name + \" By: \" + item.artists[0].name);\n          });\n          console.log(resultArray);\n          props.setRecs(resultArray);\n        });\n      } else if (props.title === \"Artist\") {\n        const testParams = {\n          limit: 5\n        };\n        props.spotify.search(searchVal, [\"artist\"], testParams).then(response => {\n          console.log(response);\n          response.artists.items.map((item, index) => {\n            resultArray.push(item.name);\n          });\n          console.log(resultArray);\n          props.setRecs(resultArray);\n        });\n      } else if (props.title === \"Genre\") {\n        const testParams = {\n          limit: 5\n        };\n        props.spotify.getAvailableGenreSeeds().then(response => {\n          console.log(response);\n          response.map((item, index) => {\n            resultArray.push(item.name);\n          });\n          console.log(resultArray);\n          props.setRecs(resultArray);\n        });\n      }\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    class: \"selectorLabel\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 13\n    }\n  }, props.title), displayElements(), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 13\n    }\n  }), props.count < 5 && /*#__PURE__*/React.createElement(Button, {\n    type: \"button\",\n    class: \"btn btn-default btn-circle btn-lg\",\n    onClick: () => addElement(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 13\n    }\n  }, \"+\"));\n}\n\nexport default Selector;","map":{"version":3,"sources":["C:/Users/rieck/Documents/Coding/Spotify/client/src/Components/Selector.js"],"names":["React","useState","Button","ListGroup","Form","ListGroupItem","Selector","props","elements","setElements","addElement","concat","setCount","count","changePlaceholder","newPlaceholder","index","newElements","setList","removeElement","splice","changeValue","value","searchRecommendations","newList","list","title","displayElements","map","element","e","target","searchRecs","recs","searchVal","resultArray","testParams","limit","spotify","search","then","response","console","log","tracks","items","item","push","name","artists","setRecs","getAvailableGenreSeeds"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\r\n\r\n//Bootstrap\r\nimport Button from 'react-bootstrap/Button'\r\nimport ListGroup from 'react-bootstrap/ListGroup'\r\nimport Form from 'react-bootstrap/Form'\r\nimport ListGroupItem from 'react-bootstrap/esm/ListGroupItem';\r\n\r\nfunction Selector (props) {\r\n    const [elements, setElements] = useState([])\r\n\r\n    function addElement () {\r\n        setElements(elements.concat([\"\"]))\r\n        props.setCount(props.count + 1)\r\n    }\r\n\r\n    function changePlaceholder (newPlaceholder, index) {\r\n        let newElements = [...elements];\r\n        newElements[index] = newPlaceholder;\r\n        setElements(newElements);\r\n        setList(newElements);\r\n    }\r\n\r\n    function removeElement (index) {\r\n        let newElements = [...elements];\r\n        newElements.splice(index,1);\r\n        setElements(newElements);\r\n        setList(newElements)\r\n        props.setCount(props.count - 1);\r\n    }\r\n\r\n    function changeValue (value, index) {\r\n        let newElements = [...elements];\r\n        newElements[index] = value;\r\n        setElements(newElements);\r\n        searchRecommendations(value);\r\n    }\r\n\r\n    function setList (newElements) {\r\n        let newList = [...props.list]\r\n        if (props.title === \"Song\") {\r\n            newList[0] = newElements\r\n            props.setList(newList)\r\n        }\r\n        else if (props.title === \"Artist\") {\r\n            newList[1] = newElements\r\n            props.setList(newList)\r\n        }\r\n        else if (props.title === \"Genre\") {\r\n            newList[2] = newElements\r\n            props.setList(newList)\r\n        }\r\n    }\r\n\r\n    function displayElements() {\r\n        return (\r\n            elements.map((element, index) => (\r\n                <div>\r\n                    <div class=\"input-group mb-3\">\r\n                        <input  type=\"text\" \r\n                                class=\"form-control\"\r\n                                placeholder={props.title + \" name\"} \r\n                                value={element} \r\n                                aria-label=\"Recipient's username\" \r\n                                aria-describedby=\"basic-addon2\"\r\n                                onChange={e => changeValue(e.target.value, index)}\r\n                                onBlur={(e) => changePlaceholder(e.target.value, index)} />\r\n                        <div class=\"input-group-append\">\r\n                            <button class=\"btn btn-outline-secondary\" type=\"button\" onClick={e => removeElement(index)}>X</button>\r\n                        </div>\r\n                    </div>\r\n                    <ListGroup>\r\n                        {searchRecs()}\r\n                    </ListGroup>\r\n                </div>\r\n            ))\r\n        )\r\n    }\r\n\r\n    function searchRecs() {\r\n        return (\r\n            props.recs.map((element) => (\r\n                <ListGroupItem>{element}</ListGroupItem>  \r\n            ))\r\n        )\r\n    }\r\n\r\n    function searchRecommendations(searchVal) {\r\n        if (searchVal != \"\") {\r\n            let resultArray = [];\r\n            if (props.title === \"Song\")\r\n            {\r\n                const testParams = {\r\n                    limit: 5\r\n                }\r\n                props.spotify.search(searchVal, [\"track\"], testParams)\r\n                .then((response) => {\r\n                    console.log(response.tracks.items)\r\n                    response.tracks.items.map((item, index) => {\r\n                        resultArray.push(item.name + \" By: \" + item.artists[0].name)\r\n                    })\r\n                    console.log(resultArray)\r\n                    props.setRecs(resultArray)\r\n                })\r\n            }\r\n            else if (props.title === \"Artist\")\r\n            {\r\n                const testParams = {\r\n                    limit: 5\r\n                }\r\n                props.spotify.search(searchVal, [\"artist\"], testParams)\r\n                .then((response) => {\r\n                    console.log(response)\r\n                    response.artists.items.map((item, index) => {\r\n                        resultArray.push(item.name)\r\n                    })\r\n                    console.log(resultArray)\r\n                    props.setRecs(resultArray)\r\n                })\r\n            }\r\n            else if (props.title === \"Genre\")\r\n            {\r\n                const testParams = {\r\n                    limit: 5\r\n                }\r\n                props.spotify.getAvailableGenreSeeds()\r\n                .then((response) => {\r\n                    console.log(response)\r\n                    response.map((item, index) => {\r\n                        resultArray.push(item.name)\r\n                    })\r\n                    console.log(resultArray)\r\n                    props.setRecs(resultArray)\r\n                })\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <label class=\"selectorLabel\">{props.title}</label>\r\n            {displayElements()}\r\n            <br />\r\n            {props.count < 5 && \r\n            <Button type=\"button\" class=\"btn btn-default btn-circle btn-lg\" onClick={() => addElement()}>+</Button>\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Selector;"]},"metadata":{},"sourceType":"module"}