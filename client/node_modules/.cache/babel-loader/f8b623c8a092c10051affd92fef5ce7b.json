{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rieck\\\\Documents\\\\Coding\\\\Spotify\\\\client\\\\src\\\\Components\\\\CustomPlaylistForm.js\";\nimport React, { useState } from 'react';\nimport SpotifyWebApi from 'spotify-web-api-js'; //Bootstrap\n\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport ListGroup from 'react-bootstrap/ListGroup'; //Component\n\nimport Selector from './Selector.js';\n\nfunction CustomPlaylistForm() {\n  const [selectorCount, setSelectorCount] = useState(0);\n  const [searchList, setSearchList] = useState([[], [], []]);\n  const [playlistName, setPlaylistName] = useState(\"Playlist\");\n  const [playlistDescription, setPlaylistDescription] = useState(\"\");\n  const [numberOfSongs, setNumberOfSongs] = useState(0);\n  const [isPublic, setIsPublic] = useState(false);\n  const [isCollab, setIsCollab] = useState(false);\n\n  function handleSubmit() {}\n\n  function handleName(name) {\n    setPlaylistName(name);\n  }\n\n  function handleDescription(description) {\n    setPlaylistDescription(description);\n  }\n\n  function handleNumber(number) {\n    setNumberOfSongs(parseInt(number));\n  }\n\n  function handleCollab(boolVal) {\n    setIsCollab(boolVal);\n  }\n\n  function handlePublic(boolVal) {\n    setIsPublic(boolVal);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    id: \"customForm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    class: \"formGroup\",\n    controlId: \"playlistName\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    class: \"formLabel\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 21\n    }\n  }, \"Playlist Name\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"text\",\n    placeholder: \"Playlist\",\n    onBlur: e => handleName(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    class: \"formGroup\",\n    controlId: \"playlistName\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 21\n    }\n  }, \"Select Up To 5 Of The Following\"), /*#__PURE__*/React.createElement(ListGroup, {\n    horizontal: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(ListGroup.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Selector, {\n    title: \"Song\",\n    place: \"Song name\",\n    count: selectorCount,\n    setCount: setSelectorCount,\n    list: searchList,\n    setList: setSearchList,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(ListGroup.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Selector, {\n    title: \"Artist\",\n    place: \"Artist name\",\n    count: selectorCount,\n    setCount: setSelectorCount,\n    list: searchList,\n    setList: setSearchList,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(ListGroup.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Selector, {\n    title: \"Genre\",\n    place: \"Genre name\",\n    count: selectorCount,\n    setCount: setSelectorCount,\n    list: searchList,\n    setList: setSearchList,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 29\n    }\n  })))), /*#__PURE__*/React.createElement(Form.Group, {\n    class: \"formGroup\",\n    controlId: \"playlistName\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    class: \"formLabel\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 21\n    }\n  }, \"Playlist Description\"), /*#__PURE__*/React.createElement(Form.Control, {\n    as: \"textarea\",\n    rows: \"3\",\n    placeholder: \"Description\",\n    onBlur: e => handleDescription(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    class: \"formGroup\",\n    controlId: \"playlistName\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    class: \"formLabel\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 21\n    }\n  }, \"Number Of Songs\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"text\",\n    placeholder: \"1-100\",\n    onBlur: e => handleNumber(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    class: \"formGroup\",\n    controlId: \"playlistName\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Form.Check, {\n    label: \"Public Playlist\",\n    onChange: e => handlePublic(e.target.checked),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Form.Check, {\n    label: \"Collaborative Playlist\",\n    onChange: e => handleCollab(e.target.checked),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    variant: \"primary\",\n    type: \"submit\",\n    onClick: () => handleSubmit(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 17\n    }\n  }, \"Create Playlist\")));\n}\n\nexport default CustomPlaylistForm;","map":{"version":3,"sources":["C:/Users/rieck/Documents/Coding/Spotify/client/src/Components/CustomPlaylistForm.js"],"names":["React","useState","SpotifyWebApi","Button","Form","ListGroup","Selector","CustomPlaylistForm","selectorCount","setSelectorCount","searchList","setSearchList","playlistName","setPlaylistName","playlistDescription","setPlaylistDescription","numberOfSongs","setNumberOfSongs","isPublic","setIsPublic","isCollab","setIsCollab","handleSubmit","handleName","name","handleDescription","description","handleNumber","number","parseInt","handleCollab","boolVal","handlePublic","e","target","value","checked"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\r\nimport SpotifyWebApi from 'spotify-web-api-js';\r\n\r\n//Bootstrap\r\nimport Button from 'react-bootstrap/Button'\r\nimport Form from 'react-bootstrap/Form'\r\nimport ListGroup from 'react-bootstrap/ListGroup'\r\n\r\n//Component\r\nimport Selector from './Selector.js'\r\n\r\nfunction CustomPlaylistForm () {\r\n    const [selectorCount, setSelectorCount] = useState(0);\r\n    const [searchList, setSearchList] = useState([[],[],[]])\r\n    const [playlistName, setPlaylistName] = useState(\"Playlist\")\r\n    const [playlistDescription, setPlaylistDescription] = useState(\"\")\r\n    const [numberOfSongs, setNumberOfSongs] = useState(0)\r\n    const [isPublic, setIsPublic] = useState(false)\r\n    const [isCollab, setIsCollab] = useState(false)\r\n\r\n    function handleSubmit () {\r\n        \r\n    }\r\n\r\n    function handleName (name) {\r\n        setPlaylistName(name);\r\n    }\r\n\r\n    function handleDescription (description) {\r\n        setPlaylistDescription(description);\r\n    }\r\n\r\n    function handleNumber (number) {\r\n        setNumberOfSongs(parseInt(number))\r\n    }\r\n\r\n    function handleCollab (boolVal) {\r\n        setIsCollab(boolVal);\r\n    }\r\n\r\n    function handlePublic (boolVal) {\r\n        setIsPublic(boolVal)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Form id=\"customForm\">\r\n                <Form.Group class=\"formGroup\" controlId=\"playlistName\">\r\n                    <Form.Label class=\"formLabel\">Playlist Name</Form.Label>\r\n                    <Form.Control type=\"text\" placeholder=\"Playlist\" onBlur={(e) => handleName(e.target.value)}/>\r\n                </Form.Group>\r\n\r\n                <Form.Group class=\"formGroup\" controlId=\"playlistName\">\r\n                    <h4>Select Up To 5 Of The Following</h4>\r\n                    <ListGroup horizontal>\r\n                        <ListGroup.Item>\r\n                            <Selector   title=\"Song\" \r\n                                        place=\"Song name\" \r\n                                        count={selectorCount} \r\n                                        setCount={setSelectorCount}\r\n                                        list={searchList}\r\n                                        setList={setSearchList}/>\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item>\r\n                            <Selector   title=\"Artist\"\r\n                                        place=\"Artist name\" \r\n                                        count={selectorCount} \r\n                                        setCount={setSelectorCount}\r\n                                        list={searchList}\r\n                                        setList={setSearchList}/>\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item>\r\n                            <Selector   title=\"Genre\" \r\n                                        place=\"Genre name\" \r\n                                        count={selectorCount} \r\n                                        setCount={setSelectorCount}\r\n                                        list={searchList}\r\n                                        setList={setSearchList}/>\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n                </Form.Group>\r\n\r\n                <Form.Group class=\"formGroup\" controlId=\"playlistName\">\r\n                    <Form.Label class=\"formLabel\">Playlist Description</Form.Label>\r\n                    <Form.Control as=\"textarea\" rows=\"3\" placeholder=\"Description\" onBlur={(e) => handleDescription(e.target.value)}/>\r\n                </Form.Group>\r\n\r\n                <Form.Group class=\"formGroup\" controlId=\"playlistName\">\r\n                    <Form.Label class=\"formLabel\">Number Of Songs</Form.Label>\r\n                    <Form.Control type=\"text\" placeholder=\"1-100\" onBlur={(e) => handleNumber(e.target.value)}/>\r\n                </Form.Group>\r\n\r\n                <Form.Group class=\"formGroup\" controlId=\"playlistName\">\r\n                    <Form.Check label=\"Public Playlist\" onChange={(e) => handlePublic(e.target.checked)}/>\r\n                    <Form.Check label=\"Collaborative Playlist\" onChange={(e) => handleCollab(e.target.checked)}/>\r\n                </Form.Group>\r\n\r\n                <Button variant=\"primary\" type=\"submit\" onClick={() => handleSubmit()}>\r\n                    Create Playlist\r\n                </Button>\r\n            </Form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CustomPlaylistForm;"]},"metadata":{},"sourceType":"module"}