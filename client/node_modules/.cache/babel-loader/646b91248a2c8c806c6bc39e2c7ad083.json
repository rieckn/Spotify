{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rieck\\\\Documents\\\\Coding\\\\Spotify\\\\client\\\\src\\\\Components\\\\CustomPlaylistForm.js\";\nimport React, { useState } from 'react'; //Bootstrap\n\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport Modal from 'react-bootstrap/Modal';\nimport Table from 'react-bootstrap/Table'; //Component\n\nimport Selector from './Selector.js';\n\nfunction CustomPlaylistForm(props) {\n  const [selectorCount, setSelectorCount] = useState(0);\n  const [searchList, setSearchList] = useState([[], [], []]);\n  const [playlistName, setPlaylistName] = useState(\"Playlist\");\n  const [playlistDescription, setPlaylistDescription] = useState(\"\");\n  const [numberOfSongs, setNumberOfSongs] = useState(0);\n  const [isPublic, setIsPublic] = useState(false);\n  const [isCollab, setIsCollab] = useState(false);\n  const [searchRecs, setSearchRecs] = useState([]);\n  const [modalShow, setModalShow] = useState(false);\n  const [acousticness, setAcousticness] = useState([\"\", \"\", \"\"]);\n  const [danceability, setDanceability] = useState([\"\", \"\", \"\"]);\n  const [duration, setDuration] = useState([\"\", \"\", \"\"]);\n  const [energy, setEnergy] = useState([\"\", \"\", \"\"]);\n  const [instrumentalness, setInstrumentalness] = useState([\"\", \"\", \"\"]);\n  const [key, setKey] = useState([\"\", \"\", \"\"]);\n  const [liveness, setLiveness] = useState([\"\", \"\", \"\"]);\n  const [loudness, setLoudness] = useState([\"\", \"\", \"\"]);\n  const [popularity, setPopularity] = useState([\"\", \"\", \"\"]);\n  const [speechiness, setSpeechiness] = useState([\"\", \"\", \"\"]);\n  const [tempo, setTempo] = useState([[], [], []]);\n  const [timesig, setTimesig] = useState([\"\", \"\", \"\"]);\n  const [valence, setValence] = useState([\"\", \"\", \"\"]);\n  const [mode, setMode] = useState([\"\"]);\n  const columnWidth = {\n    width: '50%'\n  };\n\n  function handleSubmit() {\n    const recommendationParams = {\n      limit: numberOfSongs,\n      seed_artists: searchList[1].map(element => element.split(';')[2]),\n      seed_genres: searchList[2].map(element => element.split(';')[0]),\n      seed_tracks: searchList[0].map(element => element.split(';')[2]),\n      ...(acousticness[0] !== \"\" && {\n        min_acousticness: parseFloat(acousticness[0])\n      }),\n      ...(acousticness[1] !== \"\" && {\n        max_acousticness: parseFloat(acousticness[1])\n      }),\n      ...(acousticness[2] !== \"\" && {\n        target_acousticness: parseFloat(acousticness[2])\n      }),\n      ...(danceability[0] !== \"\" && {\n        min_danceability: parseFloat(danceability[0])\n      }),\n      ...(danceability[1] !== \"\" && {\n        max_danceability: parseFloat(danceability[1])\n      }),\n      ...(danceability[2] !== \"\" && {\n        target_danceability: parseFloat(danceability[2])\n      }),\n      ...(duration[0] !== \"\" && {\n        min_duration_ms: parseInt(duration[0]) * 1000\n      }),\n      ...(duration[1] !== \"\" && {\n        max_duration_ms: parseInt(duration[1]) * 1000\n      }),\n      ...(duration[2] !== \"\" && {\n        target_acousticness: parseInt(duration[2]) * 1000\n      }),\n      ...(energy[0] !== \"\" && {\n        min_energy: parseFloat(energy[0])\n      }),\n      ...(energy[1] !== \"\" && {\n        max_energy: parseFloat(energy[1])\n      }),\n      ...(energy[2] !== \"\" && {\n        target_energy: parseFloat(energy[2])\n      }),\n      ...(instrumentalness[0] != \"\" && {\n        min_instrumentalness: parseFloat(instrumentalness[0])\n      }),\n      ...(instrumentalness[1] != \"\" && {\n        max_instrumentalness: parseFloat(instrumentalness[1])\n      }),\n      ...(instrumentalness[2] != \"\" && {\n        target_instrumentalness: parseFloat(instrumentalness[2])\n      }),\n      ...(key[0] !== \"\" && {\n        min_key: parseInt(key[0])\n      }),\n      ...(key[1] !== \"\" && {\n        max_key: parseInt(key[1])\n      }),\n      ...(key[2] !== \"\" && {\n        target_key: parseInt(key[2])\n      }),\n      ...(liveness[0] !== \"\" && {\n        min_liveness: parseFloat(liveness[0])\n      }),\n      ...(liveness[1] !== \"\" && {\n        max_liveness: parseFloat(liveness[1])\n      }),\n      ...(liveness[2] !== \"\" && {\n        target_liveness: parseFloat(liveness[2])\n      }),\n      ...(loudness[0] !== \"\" && {\n        min_loudness: parseFloat(loudness[0])\n      }),\n      ...(loudness[1] !== \"\" && {\n        max_loudness: parseFloat(loudness[1])\n      }),\n      ...(loudness[2] !== \"\" && {\n        target_loudness: parseFloat(loudness[2])\n      }),\n      ...(speechiness[0] !== \"\" && {\n        min_speechiness: parseFloat(speechiness[0])\n      }),\n      ...(speechiness[1] !== \"\" && {\n        max_speechiness: parseFloat(speechiness[1])\n      }),\n      ...(speechiness[2] !== \"\" && {\n        target_speechiness: parseFloat(speechiness[2])\n      }),\n      ...(mode[0] !== \"\" && {\n        target_mode: parseInt(mode[0])\n      }),\n      ...(popularity[0] !== \"\" && {\n        min_popularity: parseInt(popularity[0])\n      }),\n      ...(popularity[1] !== \"\" && {\n        max_popularity: parseInt(popularity[1])\n      }),\n      ...(popularity[2] !== \"\" && {\n        target_popularity: parseInt(popularity[2])\n      }),\n      ...(tempo[0] !== \"\" && {\n        min_tempo: parseFloat(tempo[0])\n      }),\n      ...(tempo[1] !== \"\" && {\n        max_tempo: parseFloat(tempo[1])\n      }),\n      ...(tempo[2] !== \"\" && {\n        target_tempo: parseFloat(tempo[2])\n      }),\n      ...(timesig[0] !== \"\" && {\n        min_time_signature: parseInt(timesig[0])\n      }),\n      ...(timesig[1] !== \"\" && {\n        max_time_signature: parseInt(timesig[1])\n      }),\n      ...(timesig[2] !== \"\" && {\n        target_time_signature: parseInt(timesig[2])\n      }),\n      ...(valence[0] !== \"\" && {\n        min_valence: parseFloat(valence[0])\n      }),\n      ...(valence[1] !== \"\" && {\n        max_valence: parseFloat(valence[1])\n      }),\n      ...(valence[2] !== \"\" && {\n        target_valence: parseFloat(valence[2])\n      })\n    };\n    props.spotify.getRecommendations(recommendationParams).then(recommendations => {\n      console.log(recommendations);\n      const playlistParams = {\n        name: playlistName,\n        public: isPublic,\n        collaborative: isCollab,\n        description: playlistDescription\n      };\n      props.spotify.createPlaylist(props.current, playlistParams).then(async response => {\n        await props.spotify.getUserPlaylists(props.current, playlistParams).then(playlists => {\n          console.log(playlists);\n          playlists.items.forEach(item => {\n            console.log(item.name);\n\n            if (item.name.toString() === playlistName && item.tracks.total === 0) {\n              props.spotify.addTracksToPlaylist(item.id, recommendations.tracks.map(track => track.uri));\n            }\n          });\n        });\n      });\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n\n  function handleName(name) {\n    setPlaylistName(name);\n  }\n\n  function handleDescription(description) {\n    setPlaylistDescription(description);\n  }\n\n  function handleNumber(number) {\n    setNumberOfSongs(parseInt(number));\n  }\n\n  function handleCollab(boolVal) {\n    setIsCollab(boolVal);\n  }\n\n  function handlePublic(boolVal) {\n    setIsPublic(boolVal);\n  }\n\n  function handleChange(val, index, setFunction, original) {\n    let newVal = [...original];\n    newVal[index] = val;\n    setFunction(newVal);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    id: \"customForm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    class: \"formGroup\",\n    controlId: \"playlistName\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    class: \"formLabel\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 21\n    }\n  }, \"Playlist Name\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"text\",\n    placeholder: \"Playlist\",\n    onBlur: e => handleName(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    class: \"formGroup\",\n    controlId: \"playlistName\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 21\n    }\n  }, \"Select Up To 5 Of The Following\"), /*#__PURE__*/React.createElement(ListGroup, {\n    horizontal: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(ListGroup.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Selector, {\n    title: \"Song\",\n    spotify: props.spotify,\n    count: selectorCount,\n    setCount: setSelectorCount,\n    list: searchList,\n    setList: setSearchList,\n    recs: searchRecs,\n    setRecs: setSearchRecs,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(ListGroup.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Selector, {\n    title: \"Artist\",\n    spotify: props.spotify,\n    count: selectorCount,\n    setCount: setSelectorCount,\n    list: searchList,\n    setList: setSearchList,\n    recs: searchRecs,\n    setRecs: setSearchRecs,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(ListGroup.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Selector, {\n    title: \"Genre\",\n    spotify: props.spotify,\n    count: selectorCount,\n    setCount: setSelectorCount,\n    list: searchList,\n    setList: setSearchList,\n    recs: searchRecs,\n    setRecs: setSearchRecs,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 29\n    }\n  })))), /*#__PURE__*/React.createElement(Form.Group, {\n    class: \"formGroup\",\n    controlId: \"playlistName\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    class: \"formLabel\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 21\n    }\n  }, \"Playlist Description\"), /*#__PURE__*/React.createElement(Form.Control, {\n    as: \"textarea\",\n    rows: \"3\",\n    placeholder: \"Description\",\n    onBlur: e => handleDescription(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    class: \"formGroup\",\n    controlId: \"playlistName\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    class: \"formLabel\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 21\n    }\n  }, \"Number Of Songs\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"text\",\n    placeholder: \"1-100\",\n    onBlur: e => handleNumber(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    variant: \"outline-secondary\",\n    onClick: () => setModalShow(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 17\n    }\n  }, \"More Options\"), /*#__PURE__*/React.createElement(Modal, {\n    size: \"lg\",\n    \"aria-labelledby\": \"contained-modal-title-vcenter\",\n    dialogClassName: \"dialogClass\",\n    centered: true,\n    show: modalShow,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Header, {\n    closeButton: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Title, {\n    id: \"contained-modal-title-vcenter\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 25\n    }\n  }, \"More Options\")), /*#__PURE__*/React.createElement(Modal.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(ListGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    striped: true,\n    bordered: true,\n    hover: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 37\n    }\n  }, \"Attribute\"), /*#__PURE__*/React.createElement(\"th\", {\n    style: columnWidth,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 37\n    }\n  }, \"Description\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 37\n    }\n  }, \"Min Value\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 37\n    }\n  }, \"Max Value\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 37\n    }\n  }, \"Target Value\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 37\n    }\n  }, \"Acousticness\"), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 37\n    }\n  }, \"A confidence measure from 0.0 to 1.0 of whether the track is acoustic. 1.0 represents high confidence the track is acoustic.\"), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"text\",\n    value: acousticness[0],\n    onChange: e => handleChange(e.target.value, 0, setAcousticness, acousticness),\n    placeholder: \"0.0-1.0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 41\n    }\n  })), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"text\",\n    value: acousticness[1],\n    onChange: e => handleChange(e.target.value, 1, setAcousticness, acousticness),\n    placeholder: \"0.0-1.0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 41\n    }\n  })), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"text\",\n    value: acousticness[2],\n    onChange: e => handleChange(e.target.value, 2, setAcousticness, acousticness),\n    placeholder: \"0.0-1.0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 41\n    }\n  }))), /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 37\n    }\n  }, \"Danceability\"), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 37\n    }\n  }, \"Danceability describes how suitable a track is for dancing based on a combination of musical elements including tempo, rhythm stability, beat strength, and overall regularity. A value of 0.0 is least danceable and 1.0 is most danceable.\"), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"text\",\n    value: danceability[0],\n    onChange: e => handleChange(e.target.value, 0, setDanceability, danceability),\n    placeholder: \"0.0-1.0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 41\n    }\n  })), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"text\",\n    value: danceability[1],\n    onChange: e => handleChange(e.target.value, 1, setDanceability, danceability),\n    placeholder: \"0.0-1.0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 41\n    }\n  })), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"text\",\n    value: danceability[2],\n    onChange: e => handleChange(e.target.value, 2, setDanceability, danceability),\n    placeholder: \"0.0-1.0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 41\n    }\n  }))), /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 37\n    }\n  }, \"Energy\"), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 37\n    }\n  }, \"Energy is a measure from 0.0 to 1.0 and represents a perceptual measure of intensity and activity. Typically, energetic tracks feel fast, loud, and noisy. For example, death metal has high energy, while a Bach prelude scores low on the scale. Perceptual features contributing to this attribute include dynamic range, perceived loudness, timbre, onset rate, and general entropy.\"), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"text\",\n    value: energy[0],\n    onChange: e => handleChange(e.target.value, 0, setEnergy, energy),\n    placeholder: \"0.0-1.0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 41\n    }\n  })), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"text\",\n    value: energy[1],\n    onChange: e => handleChange(e.target.value, 1, setEnergy, energy),\n    placeholder: \"0.0-1.0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 41\n    }\n  })), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"text\",\n    value: energy[2],\n    onChange: e => handleChange(e.target.value, 2, setEnergy, energy),\n    placeholder: \"0.0-1.0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 41\n    }\n  }))), /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 37\n    }\n  }, \"Instrumentalness\"), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 37\n    }\n  }, \"Predicts whether a track contains no vocals. \\u201COoh\\u201D and \\u201Caah\\u201D sounds are treated as instrumental in this context. Rap or spoken word tracks are clearly \\u201Cvocal\\u201D. The closer the instrumentalness value is to 1.0, the greater likelihood the track contains no vocal content. Values above 0.5 are intended to represent instrumental tracks, but confidence is higher as the value approaches 1.0.\"), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"text\",\n    value: instrumentalness[0],\n    onChange: e => handleChange(e.target.value, 0, setInstrumentalness, instrumentalness),\n    placeholder: \"0.0-1.0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 41\n    }\n  })), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"text\",\n    value: instrumentalness[1],\n    onChange: e => handleChange(e.target.value, 1, setInstrumentalness, instrumentalness),\n    placeholder: \"0.0-1.0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 41\n    }\n  })), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"text\",\n    value: instrumentalness[2],\n    onChange: e => handleChange(e.target.value, 2, setInstrumentalness, instrumentalness),\n    placeholder: \"0.0-1.0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 41\n    }\n  }))), /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 37\n    }\n  }, \"Liveness\"), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 37\n    }\n  }, \"Detects the presence of an audience in the recording. Higher liveness values represent an increased probability that the track was performed live. A value above 0.8 provides strong likelihood that the track is live.\"), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"text\",\n    value: liveness[0],\n    onChange: e => handleChange(e.target.value, 0, setLiveness, liveness),\n    placeholder: \"0.0-1.0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 41\n    }\n  })), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"text\",\n    value: liveness[1],\n    onChange: e => handleChange(e.target.value, 1, setLiveness, liveness),\n    placeholder: \"0.0-1.0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 41\n    }\n  })), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"text\",\n    value: liveness[2],\n    onChange: e => handleChange(e.target.value, 2, setLiveness, liveness),\n    placeholder: \"0.0-1.0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 41\n    }\n  }))), /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 37\n    }\n  }, \"Speechiness\"), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 37\n    }\n  }, \"Speechiness detects the presence of spoken words in a track. The more exclusively speech-like the recording (e.g. talk show, audio book, poetry), the closer to 1.0 the attribute value. Values above 0.66 describe tracks that are probably made entirely of spoken words. Values between 0.33 and 0.66 describe tracks that may contain both music and speech, either in sections or layered, including such cases as rap music. Values below 0.33 most likely represent music and other non-speech-like tracks.\"), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"text\",\n    value: speechiness[0],\n    onChange: e => handleChange(e.target.value, 0, setSpeechiness, speechiness),\n    placeholder: \"0.0-1.0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 41\n    }\n  })), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"text\",\n    value: speechiness[1],\n    onChange: e => handleChange(e.target.value, 1, setSpeechiness, speechiness),\n    placeholder: \"0.0-1.0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 41\n    }\n  })), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"text\",\n    value: speechiness[2],\n    onChange: e => handleChange(e.target.value, 2, setSpeechiness, speechiness),\n    placeholder: \"0.0-1.0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 41\n    }\n  }))), /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 37\n    }\n  }, \"Valence\"), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 37\n    }\n  }, \"A measure from 0.0 to 1.0 describing the musical positiveness conveyed by a track. Tracks with high valence sound more positive (e.g. happy, cheerful, euphoric), while tracks with low valence sound more negative (e.g. sad, depressed, angry).\"), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"text\",\n    value: valence[0],\n    onChange: e => handleChange(e.target.value, 0, setValence, valence),\n    placeholder: \"0.0-1.0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 41\n    }\n  })), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"text\",\n    value: valence[1],\n    onChange: e => handleChange(e.target.value, 1, setValence, valence),\n    placeholder: \"0.0-1.0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 41\n    }\n  })), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"text\",\n    value: valence[2],\n    onChange: e => handleChange(e.target.value, 2, setValence, valence),\n    placeholder: \"0.0-1.0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 41\n    }\n  }))), /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 37\n    }\n  }, \"Duration (s)\"), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 37\n    }\n  }, \"The duration of the track seconds.\"), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"text\",\n    value: duration[0],\n    onChange: e => handleChange(e.target.value, 0, setDuration, duration),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 41\n    }\n  })), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"text\",\n    value: duration[1],\n    onChange: e => handleChange(e.target.value, 1, setDuration, duration),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 41\n    }\n  })), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"text\",\n    value: duration[2],\n    onChange: e => handleChange(e.target.value, 2, setDuration, duration),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 41\n    }\n  }))), /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 37\n    }\n  }, \"Key\"), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 37\n    }\n  }, \"The key the track is in. Integers map to pitches using standard Pitch Class notation. E.g. 0 = C, 1 = C\\u266F/D\\u266D, 2 = D, and so on.\"), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"text\",\n    value: key[0],\n    onChange: e => handleChange(e.target.value, 0, setKey, key),\n    placeholder: \"0-11\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 41\n    }\n  })), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"text\",\n    value: key[1],\n    onChange: e => handleChange(e.target.value, 1, setKey, key),\n    placeholder: \"0-11\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 41\n    }\n  })), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"text\",\n    value: key[2],\n    onChange: e => handleChange(e.target.value, 2, setKey, key),\n    placeholder: \"0-11\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 41\n    }\n  }))), /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 37\n    }\n  }, \"Loudness\"), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 37\n    }\n  }, \"The overall loudness of a track in decibels (dB). Loudness values are averaged across the entire track and are useful for comparing relative loudness of tracks. Loudness is the quality of a sound that is the primary psychological correlate of physical strength (amplitude). Values typical range between -60 and 0 db.\"), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"text\",\n    value: loudness[0],\n    onChange: e => handleChange(e.target.value, 0, setLoudness, loudness),\n    placeholder: \"-60-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 41\n    }\n  })), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"text\",\n    value: loudness[1],\n    onChange: e => handleChange(e.target.value, 1, setLoudness, loudness),\n    placeholder: \"-60-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 41\n    }\n  })), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"text\",\n    value: loudness[2],\n    onChange: e => handleChange(e.target.value, 2, setLoudness, loudness),\n    placeholder: \"-60-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 41\n    }\n  }))), /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 37\n    }\n  }, \"Popularity\"), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 37\n    }\n  }, \"The popularity of the track. The value will be between 0 and 100, with 100 being the most popular. The popularity is calculated by algorithm and is based, in the most part, on the total number of plays the track has had and how recent those plays are.\"), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"text\",\n    value: popularity[0],\n    onChange: e => handleChange(e.target.value, 0, setPopularity, popularity),\n    placeholder: \"0-100\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 41\n    }\n  })), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"text\",\n    value: popularity[1],\n    onChange: e => handleChange(e.target.value, 1, setPopularity, popularity),\n    placeholder: \"0-100\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 41\n    }\n  })), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"text\",\n    value: popularity[2],\n    onChange: e => handleChange(e.target.value, 2, setPopularity, popularity),\n    placeholder: \"0-100\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 41\n    }\n  }))), /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 37\n    }\n  }, \"Tempo\"), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 37\n    }\n  }, \"The overall estimated tempo of a track in beats per minute (BPM). In musical terminology, tempo is the speed or pace of a given piece and derives directly from the average beat duration.\"), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"text\",\n    value: tempo[0],\n    onChange: e => handleChange(e.target.value, 0, setTempo, tempo),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 41\n    }\n  })), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"text\",\n    value: tempo[1],\n    onChange: e => handleChange(e.target.value, 1, setTempo, tempo),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 41\n    }\n  })), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 310,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"text\",\n    value: tempo[2],\n    onChange: e => handleChange(e.target.value, 2, setTempo, tempo),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 310,\n      columnNumber: 41\n    }\n  }))), /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 312,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 37\n    }\n  }, \"Time Signature\"), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 314,\n      columnNumber: 37\n    }\n  }, \"An estimated overall time signature of a track. The time signature (meter) is a notational convention to specify how many beats are in each bar (or measure). The time signature ranges from 3 to 7 indicating time signatures of \\u201C3/4\\u201D, to \\u201C7/4\\u201D.\"), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"text\",\n    value: timesig[0],\n    onChange: e => handleChange(e.target.value, 0, setTimesig, timesig),\n    placeholder: \"3-7\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 41\n    }\n  })), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 316,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"text\",\n    value: timesig[1],\n    onChange: e => handleChange(e.target.value, 1, setTimesig, timesig),\n    placeholder: \"3-7\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 316,\n      columnNumber: 41\n    }\n  })), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 317,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"text\",\n    value: timesig[2],\n    onChange: e => handleChange(e.target.value, 2, setTimesig, timesig),\n    placeholder: \"3-7\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 317,\n      columnNumber: 41\n    }\n  }))), /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 319,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 37\n    }\n  }, \"Mode\"), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 321,\n      columnNumber: 37\n    }\n  }, \"Mode indicates the modality (major or minor) of a track, the type of scale from which its melodic content is derived. Major is represented by 1 and minor is 0.\"), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 37\n    }\n  }), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 323,\n      columnNumber: 37\n    }\n  }), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 324,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"text\",\n    value: mode[0],\n    onChange: e => handleChange(e.target.value, 0, setMode, mode),\n    placeholder: \"0-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 324,\n      columnNumber: 41\n    }\n  })))))))), /*#__PURE__*/React.createElement(Modal.Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 331,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: () => setModalShow(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 332,\n      columnNumber: 25\n    }\n  }, \"Close\"))), /*#__PURE__*/React.createElement(Form.Group, {\n    class: \"formGroup\",\n    controlId: \"playlistName\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 337,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Form.Check, {\n    label: \"Public Playlist\",\n    onChange: e => handlePublic(e.target.checked),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 338,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Form.Check, {\n    label: \"Collaborative Playlist\",\n    onChange: e => handleCollab(e.target.checked),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 339,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    variant: \"primary\",\n    type: \"button\",\n    onClick: () => handleSubmit(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 342,\n      columnNumber: 17\n    }\n  }, \"Create Playlist\")));\n}\n\nexport default CustomPlaylistForm;","map":{"version":3,"sources":["C:/Users/rieck/Documents/Coding/Spotify/client/src/Components/CustomPlaylistForm.js"],"names":["React","useState","Button","Form","ListGroup","Modal","Table","Selector","CustomPlaylistForm","props","selectorCount","setSelectorCount","searchList","setSearchList","playlistName","setPlaylistName","playlistDescription","setPlaylistDescription","numberOfSongs","setNumberOfSongs","isPublic","setIsPublic","isCollab","setIsCollab","searchRecs","setSearchRecs","modalShow","setModalShow","acousticness","setAcousticness","danceability","setDanceability","duration","setDuration","energy","setEnergy","instrumentalness","setInstrumentalness","key","setKey","liveness","setLiveness","loudness","setLoudness","popularity","setPopularity","speechiness","setSpeechiness","tempo","setTempo","timesig","setTimesig","valence","setValence","mode","setMode","columnWidth","width","handleSubmit","recommendationParams","limit","seed_artists","map","element","split","seed_genres","seed_tracks","min_acousticness","parseFloat","max_acousticness","target_acousticness","min_danceability","max_danceability","target_danceability","min_duration_ms","parseInt","max_duration_ms","min_energy","max_energy","target_energy","min_instrumentalness","max_instrumentalness","target_instrumentalness","min_key","max_key","target_key","min_liveness","max_liveness","target_liveness","min_loudness","max_loudness","target_loudness","min_speechiness","max_speechiness","target_speechiness","target_mode","min_popularity","max_popularity","target_popularity","min_tempo","max_tempo","target_tempo","min_time_signature","max_time_signature","target_time_signature","min_valence","max_valence","target_valence","spotify","getRecommendations","then","recommendations","console","log","playlistParams","name","public","collaborative","description","createPlaylist","current","response","getUserPlaylists","playlists","items","forEach","item","toString","tracks","total","addTracksToPlaylist","id","track","uri","catch","error","handleName","handleDescription","handleNumber","number","handleCollab","boolVal","handlePublic","handleChange","val","index","setFunction","original","newVal","e","target","value","checked"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\r\n\r\n//Bootstrap\r\nimport Button from 'react-bootstrap/Button'\r\nimport Form from 'react-bootstrap/Form'\r\nimport ListGroup from 'react-bootstrap/ListGroup'\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport Table from 'react-bootstrap/Table'\r\n\r\n//Component\r\nimport Selector from './Selector.js'\r\n\r\nfunction CustomPlaylistForm (props) {\r\n    const [selectorCount, setSelectorCount] = useState(0);\r\n    const [searchList, setSearchList] = useState([[],[],[]])\r\n    const [playlistName, setPlaylistName] = useState(\"Playlist\")\r\n    const [playlistDescription, setPlaylistDescription] = useState(\"\")\r\n    const [numberOfSongs, setNumberOfSongs] = useState(0)\r\n    const [isPublic, setIsPublic] = useState(false)\r\n    const [isCollab, setIsCollab] = useState(false)\r\n    const [searchRecs, setSearchRecs] = useState([])\r\n    const [modalShow, setModalShow] = useState(false);\r\n    const [acousticness, setAcousticness] = useState([\"\",\"\",\"\"]);\r\n    const [danceability, setDanceability] = useState([\"\",\"\",\"\"]);\r\n    const [duration, setDuration] = useState([\"\",\"\",\"\"]);\r\n    const [energy, setEnergy] = useState([\"\",\"\",\"\"]);\r\n    const [instrumentalness, setInstrumentalness] = useState([\"\",\"\",\"\"]); \r\n    const [key, setKey] = useState([\"\",\"\",\"\"]);\r\n    const [liveness, setLiveness] = useState([\"\",\"\",\"\"]);\r\n    const [loudness, setLoudness] = useState([\"\",\"\",\"\"]);\r\n    const [popularity, setPopularity] = useState([\"\",\"\",\"\"]); \r\n    const [speechiness, setSpeechiness] = useState([\"\",\"\",\"\"]); \r\n    const [tempo, setTempo] = useState([[],[],[]]);\r\n    const [timesig, setTimesig] = useState([\"\",\"\",\"\"]); \r\n    const [valence, setValence] = useState([\"\",\"\",\"\"]);\r\n    const [mode, setMode] = useState([\"\"]); \r\n\r\n    const columnWidth = {\r\n        width: '50%'\r\n    }\r\n\r\n    function handleSubmit () {\r\n        const recommendationParams = {\r\n            limit: numberOfSongs,\r\n            seed_artists: searchList[1].map((element) => element.split(';')[2]),\r\n            seed_genres: searchList[2].map((element) => element.split(';')[0]),\r\n            seed_tracks: searchList[0].map((element) => element.split(';')[2]),\r\n            ...(acousticness[0] !== \"\" && {min_acousticness: parseFloat(acousticness[0])}),\r\n            ...(acousticness[1] !== \"\" && {max_acousticness: parseFloat(acousticness[1])}),\r\n            ...(acousticness[2] !== \"\" && {target_acousticness: parseFloat(acousticness[2])}),\r\n            ...(danceability[0] !== \"\" && {min_danceability: parseFloat(danceability[0])}),\r\n            ...(danceability[1] !== \"\" && {max_danceability: parseFloat(danceability[1])}),\r\n            ...(danceability[2] !== \"\" && {target_danceability: parseFloat(danceability[2])}),\r\n            ...(duration[0] !== \"\" && {min_duration_ms: parseInt(duration[0]) * 1000}),\r\n            ...(duration[1] !== \"\" && {max_duration_ms: parseInt(duration[1]) * 1000}),\r\n            ...(duration[2] !== \"\" && {target_acousticness: parseInt(duration[2]) * 1000}),\r\n            ...(energy[0] !== \"\" && {min_energy: parseFloat(energy[0])}),\r\n            ...(energy[1] !== \"\" && {max_energy: parseFloat(energy[1])}),\r\n            ...(energy[2] !== \"\" && {target_energy: parseFloat(energy[2])}),\r\n            ...(instrumentalness[0] != \"\" && {min_instrumentalness: parseFloat(instrumentalness[0])}),\r\n            ...(instrumentalness[1] != \"\" && {max_instrumentalness: parseFloat(instrumentalness[1])}),\r\n            ...(instrumentalness[2] != \"\" && {target_instrumentalness: parseFloat(instrumentalness[2])}),\r\n            ...(key[0] !== \"\" && {min_key: parseInt(key[0])}),\r\n            ...(key[1] !== \"\" && {max_key: parseInt(key[1])}),\r\n            ...(key[2] !== \"\" && {target_key: parseInt(key[2])}),\r\n            ...(liveness[0] !== \"\" && {min_liveness: parseFloat(liveness[0])}),\r\n            ...(liveness[1] !== \"\" && {max_liveness: parseFloat(liveness[1])}),\r\n            ...(liveness[2] !== \"\" && {target_liveness: parseFloat(liveness[2])}),\r\n            ...(loudness[0] !== \"\" && {min_loudness: parseFloat(loudness[0])}),\r\n            ...(loudness[1] !== \"\" && {max_loudness: parseFloat(loudness[1])}),\r\n            ...(loudness[2] !== \"\" && {target_loudness: parseFloat(loudness[2])}),\r\n            ...(speechiness[0] !== \"\" && {min_speechiness: parseFloat(speechiness[0])}),\r\n            ...(speechiness[1] !== \"\" && {max_speechiness: parseFloat(speechiness[1])}),\r\n            ...(speechiness[2] !== \"\" && {target_speechiness: parseFloat(speechiness[2])}),\r\n            ...(mode[0] !== \"\" && {target_mode: parseInt(mode[0])}),\r\n            ...(popularity[0] !== \"\" && {min_popularity: parseInt(popularity[0])}),\r\n            ...(popularity[1] !== \"\" && {max_popularity: parseInt(popularity[1])}),\r\n            ...(popularity[2] !== \"\" && {target_popularity: parseInt(popularity[2])}),\r\n            ...(tempo[0] !== \"\" && {min_tempo: parseFloat(tempo[0])}),\r\n            ...(tempo[1] !== \"\" && {max_tempo: parseFloat(tempo[1])}),\r\n            ...(tempo[2] !== \"\" && {target_tempo: parseFloat(tempo[2])}),\r\n            ...(timesig[0] !== \"\" && {min_time_signature: parseInt(timesig[0])}),\r\n            ...(timesig[1] !== \"\" && {max_time_signature: parseInt(timesig[1])}),\r\n            ...(timesig[2] !== \"\" && {target_time_signature: parseInt(timesig[2])}),\r\n            ...(valence[0] !== \"\" && {min_valence: parseFloat(valence[0])}),\r\n            ...(valence[1] !== \"\" && {max_valence: parseFloat(valence[1])}),\r\n            ...(valence[2] !== \"\" && {target_valence: parseFloat(valence[2])})\r\n        }\r\n        props.spotify.getRecommendations(recommendationParams)\r\n        .then((recommendations) => {\r\n            console.log(recommendations)\r\n            const playlistParams = {\r\n                name: playlistName,\r\n                public: isPublic,\r\n                collaborative: isCollab,\r\n                description: playlistDescription,\r\n            }\r\n            props.spotify.createPlaylist(props.current, playlistParams)\r\n            .then(async (response) => {\r\n                await props.spotify.getUserPlaylists(props.current, playlistParams)\r\n                .then(playlists => {\r\n                  console.log(playlists)\r\n                  playlists.items.forEach(item => {\r\n                    console.log(item.name)\r\n                    if (item.name.toString() === playlistName && item.tracks.total === 0)\r\n                    {\r\n                        props.spotify.addTracksToPlaylist(item.id, recommendations.tracks.map((track) => track.uri))\r\n                    }\r\n                  })\r\n                })\r\n            })\r\n        })\r\n        .catch(error => {\r\n            console.log(error)\r\n        })\r\n    }\r\n\r\n    function handleName (name) {\r\n        setPlaylistName(name);\r\n    }\r\n\r\n    function handleDescription (description) {\r\n        setPlaylistDescription(description);\r\n    }\r\n\r\n    function handleNumber (number) {\r\n        setNumberOfSongs(parseInt(number))\r\n    }\r\n\r\n    function handleCollab (boolVal) {\r\n        setIsCollab(boolVal);\r\n    }\r\n\r\n    function handlePublic (boolVal) {\r\n        setIsPublic(boolVal)\r\n    }\r\n\r\n    function handleChange (val, index, setFunction, original) {\r\n        let newVal = [...original];\r\n        newVal[index] = val;\r\n        setFunction(newVal);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Form id=\"customForm\">\r\n                <Form.Group class=\"formGroup\" controlId=\"playlistName\">\r\n                    <Form.Label class=\"formLabel\">Playlist Name</Form.Label>\r\n                    <Form.Control type=\"text\" placeholder=\"Playlist\" onBlur={(e) => handleName(e.target.value)}/>\r\n                </Form.Group>\r\n\r\n                <Form.Group class=\"formGroup\" controlId=\"playlistName\">\r\n                    <h4>Select Up To 5 Of The Following</h4>\r\n                    <ListGroup horizontal>\r\n                        <ListGroup.Item>\r\n                            <Selector   title=\"Song\" \r\n                                        spotify={props.spotify}\r\n                                        count={selectorCount} \r\n                                        setCount={setSelectorCount}\r\n                                        list={searchList}\r\n                                        setList={setSearchList}\r\n                                        recs={searchRecs}\r\n                                        setRecs={setSearchRecs}/>\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item>\r\n                            <Selector   title=\"Artist\"\r\n                                        spotify={props.spotify} \r\n                                        count={selectorCount} \r\n                                        setCount={setSelectorCount}\r\n                                        list={searchList}\r\n                                        setList={setSearchList}\r\n                                        recs={searchRecs}\r\n                                        setRecs={setSearchRecs}/>\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item>\r\n                            <Selector   title=\"Genre\" \r\n                                        spotify={props.spotify} \r\n                                        count={selectorCount} \r\n                                        setCount={setSelectorCount}\r\n                                        list={searchList}\r\n                                        setList={setSearchList}\r\n                                        recs={searchRecs}\r\n                                        setRecs={setSearchRecs}/>\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n                </Form.Group>\r\n\r\n                <Form.Group class=\"formGroup\" controlId=\"playlistName\">\r\n                    <Form.Label class=\"formLabel\">Playlist Description</Form.Label>\r\n                    <Form.Control as=\"textarea\" rows=\"3\" placeholder=\"Description\" onBlur={(e) => handleDescription(e.target.value)}/>\r\n                </Form.Group>\r\n\r\n                <Form.Group class=\"formGroup\" controlId=\"playlistName\">\r\n                    <Form.Label class=\"formLabel\">Number Of Songs</Form.Label>\r\n                    <Form.Control type=\"text\" placeholder=\"1-100\" onBlur={(e) => handleNumber(e.target.value)}/>\r\n                </Form.Group>\r\n\r\n                <Button variant=\"outline-secondary\" onClick={() => setModalShow(true)}>\r\n                    More Options\r\n                </Button>\r\n\r\n                <Modal\r\n                        size=\"lg\"\r\n                        aria-labelledby=\"contained-modal-title-vcenter\"\r\n                        dialogClassName=\"dialogClass\"\r\n                        centered\r\n                        show={modalShow}\r\n                    >\r\n                        <Modal.Header closeButton>\r\n                        <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                            More Options\r\n                        </Modal.Title>\r\n                        </Modal.Header>\r\n                        <Modal.Body>\r\n                            <Form>\r\n                            <ListGroup>\r\n                            <Table striped bordered hover>\r\n                                <thead>\r\n                                    <tr>\r\n                                    <th>Attribute</th>\r\n                                    <th style={columnWidth}>Description</th>\r\n                                    <th>Min Value</th>\r\n                                    <th>Max Value</th>\r\n                                    <th>Target Value</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    <tr>\r\n                                    <td>Acousticness</td>\r\n                                    <td>A confidence measure from 0.0 to 1.0 of whether the track is acoustic. 1.0 represents high confidence the track is acoustic.</td>\r\n                                    <td><Form.Control type=\"text\" value={acousticness[0]} onChange={(e) => handleChange(e.target.value, 0, setAcousticness, acousticness)} placeholder=\"0.0-1.0\"/></td>\r\n                                    <td><Form.Control type=\"text\" value={acousticness[1]} onChange={(e) => handleChange(e.target.value, 1, setAcousticness, acousticness)} placeholder=\"0.0-1.0\"/></td>\r\n                                    <td><Form.Control type=\"text\" value={acousticness[2]} onChange={(e) => handleChange(e.target.value, 2, setAcousticness, acousticness)} placeholder=\"0.0-1.0\"/></td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                    <td>Danceability</td>\r\n                                    <td>Danceability describes how suitable a track is for dancing based on a combination of musical elements including tempo, rhythm stability, beat strength, and overall regularity. A value of 0.0 is least danceable and 1.0 is most danceable.</td>\r\n                                    <td><Form.Control type=\"text\" value={danceability[0]} onChange={(e) => handleChange(e.target.value, 0, setDanceability, danceability)} placeholder=\"0.0-1.0\"/></td>\r\n                                    <td><Form.Control type=\"text\" value={danceability[1]} onChange={(e) => handleChange(e.target.value, 1, setDanceability, danceability)} placeholder=\"0.0-1.0\"/></td>\r\n                                    <td><Form.Control type=\"text\" value={danceability[2]} onChange={(e) => handleChange(e.target.value, 2, setDanceability, danceability)} placeholder=\"0.0-1.0\"/></td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                    <td>Energy</td>\r\n                                    <td>Energy is a measure from 0.0 to 1.0 and represents a perceptual measure of intensity and activity. Typically, energetic tracks feel fast, loud, and noisy. For example, death metal has high energy, while a Bach prelude scores low on the scale. Perceptual features contributing to this attribute include dynamic range, perceived loudness, timbre, onset rate, and general entropy.</td>\r\n                                    <td><Form.Control type=\"text\" value={energy[0]} onChange={(e) => handleChange(e.target.value, 0, setEnergy, energy)} placeholder=\"0.0-1.0\"/></td>\r\n                                    <td><Form.Control type=\"text\" value={energy[1]} onChange={(e) => handleChange(e.target.value, 1, setEnergy, energy)} placeholder=\"0.0-1.0\"/></td>\r\n                                    <td><Form.Control type=\"text\" value={energy[2]} onChange={(e) => handleChange(e.target.value, 2, setEnergy, energy)} placeholder=\"0.0-1.0\"/></td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                    <td>Instrumentalness</td>\r\n                                    <td>Predicts whether a track contains no vocals. “Ooh” and “aah” sounds are treated as instrumental in this context. Rap or spoken word tracks are clearly “vocal”. The closer the instrumentalness value is to 1.0, the greater likelihood the track contains no vocal content. Values above 0.5 are intended to represent instrumental tracks, but confidence is higher as the value approaches 1.0.</td>\r\n                                    <td><Form.Control type=\"text\" value={instrumentalness[0]} onChange={(e) => handleChange(e.target.value, 0, setInstrumentalness, instrumentalness)} placeholder=\"0.0-1.0\"/></td>\r\n                                    <td><Form.Control type=\"text\" value={instrumentalness[1]} onChange={(e) => handleChange(e.target.value, 1, setInstrumentalness, instrumentalness)} placeholder=\"0.0-1.0\"/></td>\r\n                                    <td><Form.Control type=\"text\" value={instrumentalness[2]} onChange={(e) => handleChange(e.target.value, 2, setInstrumentalness, instrumentalness)} placeholder=\"0.0-1.0\"/></td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                    <td>Liveness</td>\r\n                                    <td>Detects the presence of an audience in the recording. Higher liveness values represent an increased probability that the track was performed live. A value above 0.8 provides strong likelihood that the track is live.</td>\r\n                                    <td><Form.Control type=\"text\" value={liveness[0]} onChange={(e) => handleChange(e.target.value, 0, setLiveness, liveness)} placeholder=\"0.0-1.0\"/></td>\r\n                                    <td><Form.Control type=\"text\" value={liveness[1]} onChange={(e) => handleChange(e.target.value, 1, setLiveness, liveness)} placeholder=\"0.0-1.0\"/></td>\r\n                                    <td><Form.Control type=\"text\" value={liveness[2]} onChange={(e) => handleChange(e.target.value, 2, setLiveness, liveness)} placeholder=\"0.0-1.0\"/></td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                    <td>Speechiness</td>\r\n                                    <td>Speechiness detects the presence of spoken words in a track. The more exclusively speech-like the recording (e.g. talk show, audio book, poetry), the closer to 1.0 the attribute value. Values above 0.66 describe tracks that are probably made entirely of spoken words. Values between 0.33 and 0.66 describe tracks that may contain both music and speech, either in sections or layered, including such cases as rap music. Values below 0.33 most likely represent music and other non-speech-like tracks.</td>\r\n                                    <td><Form.Control type=\"text\" value={speechiness[0]} onChange={(e) => handleChange(e.target.value, 0, setSpeechiness, speechiness)} placeholder=\"0.0-1.0\"/></td>\r\n                                    <td><Form.Control type=\"text\" value={speechiness[1]} onChange={(e) => handleChange(e.target.value, 1, setSpeechiness, speechiness)} placeholder=\"0.0-1.0\"/></td>\r\n                                    <td><Form.Control type=\"text\" value={speechiness[2]} onChange={(e) => handleChange(e.target.value, 2, setSpeechiness, speechiness)} placeholder=\"0.0-1.0\"/></td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                    <td>Valence</td>\r\n                                    <td>A measure from 0.0 to 1.0 describing the musical positiveness conveyed by a track. Tracks with high valence sound more positive (e.g. happy, cheerful, euphoric), while tracks with low valence sound more negative (e.g. sad, depressed, angry).</td>\r\n                                    <td><Form.Control type=\"text\" value={valence[0]} onChange={(e) => handleChange(e.target.value, 0, setValence, valence)} placeholder=\"0.0-1.0\"/></td>\r\n                                    <td><Form.Control type=\"text\" value={valence[1]} onChange={(e) => handleChange(e.target.value, 1, setValence, valence)} placeholder=\"0.0-1.0\"/></td>\r\n                                    <td><Form.Control type=\"text\" value={valence[2]} onChange={(e) => handleChange(e.target.value, 2, setValence, valence)} placeholder=\"0.0-1.0\"/></td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                    <td>Duration (s)</td>\r\n                                    <td>The duration of the track seconds.</td>\r\n                                    <td><Form.Control type=\"text\" value={duration[0]} onChange={(e) => handleChange(e.target.value, 0, setDuration, duration)}/></td>\r\n                                    <td><Form.Control type=\"text\" value={duration[1]} onChange={(e) => handleChange(e.target.value, 1, setDuration, duration)}/></td>\r\n                                    <td><Form.Control type=\"text\" value={duration[2]} onChange={(e) => handleChange(e.target.value, 2, setDuration, duration)}/></td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                    <td>Key</td>\r\n                                    <td>The key the track is in. Integers map to pitches using standard Pitch Class notation. E.g. 0 = C, 1 = C♯/D♭, 2 = D, and so on.</td>\r\n                                    <td><Form.Control type=\"text\" value={key[0]} onChange={(e) => handleChange(e.target.value, 0, setKey, key)} placeholder=\"0-11\"/></td>\r\n                                    <td><Form.Control type=\"text\" value={key[1]} onChange={(e) => handleChange(e.target.value, 1, setKey, key)} placeholder=\"0-11\"/></td>\r\n                                    <td><Form.Control type=\"text\" value={key[2]} onChange={(e) => handleChange(e.target.value, 2, setKey, key)} placeholder=\"0-11\"/></td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                    <td>Loudness</td>\r\n                                    <td>The overall loudness of a track in decibels (dB). Loudness values are averaged across the entire track and are useful for comparing relative loudness of tracks. Loudness is the quality of a sound that is the primary psychological correlate of physical strength (amplitude). Values typical range between -60 and 0 db.</td>\r\n                                    <td><Form.Control type=\"text\" value={loudness[0]} onChange={(e) => handleChange(e.target.value, 0, setLoudness, loudness)} placeholder=\"-60-0\"/></td>\r\n                                    <td><Form.Control type=\"text\" value={loudness[1]} onChange={(e) => handleChange(e.target.value, 1, setLoudness, loudness)} placeholder=\"-60-0\"/></td>\r\n                                    <td><Form.Control type=\"text\" value={loudness[2]} onChange={(e) => handleChange(e.target.value, 2, setLoudness, loudness)} placeholder=\"-60-0\"/></td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                    <td>Popularity</td>\r\n                                    <td>The popularity of the track. The value will be between 0 and 100, with 100 being the most popular. The popularity is calculated by algorithm and is based, in the most part, on the total number of plays the track has had and how recent those plays are.</td>\r\n                                    <td><Form.Control type=\"text\" value={popularity[0]} onChange={(e) => handleChange(e.target.value, 0, setPopularity, popularity)} placeholder=\"0-100\"/></td>\r\n                                    <td><Form.Control type=\"text\" value={popularity[1]} onChange={(e) => handleChange(e.target.value, 1, setPopularity, popularity)} placeholder=\"0-100\"/></td>\r\n                                    <td><Form.Control type=\"text\" value={popularity[2]} onChange={(e) => handleChange(e.target.value, 2, setPopularity, popularity)} placeholder=\"0-100\"/></td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                    <td>Tempo</td>\r\n                                    <td>The overall estimated tempo of a track in beats per minute (BPM). In musical terminology, tempo is the speed or pace of a given piece and derives directly from the average beat duration.</td>\r\n                                    <td><Form.Control type=\"text\" value={tempo[0]} onChange={(e) => handleChange(e.target.value, 0, setTempo, tempo)}/></td>\r\n                                    <td><Form.Control type=\"text\" value={tempo[1]} onChange={(e) => handleChange(e.target.value, 1, setTempo, tempo)}/></td>\r\n                                    <td><Form.Control type=\"text\" value={tempo[2]} onChange={(e) => handleChange(e.target.value, 2, setTempo, tempo)}/></td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                    <td>Time Signature</td>\r\n                                    <td>An estimated overall time signature of a track. The time signature (meter) is a notational convention to specify how many beats are in each bar (or measure). The time signature ranges from 3 to 7 indicating time signatures of “3/4”, to “7/4”.</td>\r\n                                    <td><Form.Control type=\"text\" value={timesig[0]} onChange={(e) => handleChange(e.target.value, 0, setTimesig, timesig)} placeholder=\"3-7\"/></td>\r\n                                    <td><Form.Control type=\"text\" value={timesig[1]} onChange={(e) => handleChange(e.target.value, 1, setTimesig, timesig)} placeholder=\"3-7\"/></td>\r\n                                    <td><Form.Control type=\"text\" value={timesig[2]} onChange={(e) => handleChange(e.target.value, 2, setTimesig, timesig)} placeholder=\"3-7\"/></td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                    <td>Mode</td>\r\n                                    <td>Mode indicates the modality (major or minor) of a track, the type of scale from which its melodic content is derived. Major is represented by 1 and minor is 0.</td>\r\n                                    <td></td>\r\n                                    <td></td>\r\n                                    <td><Form.Control type=\"text\" value={mode[0]} onChange={(e) => handleChange(e.target.value, 0, setMode, mode)} placeholder=\"0-1\"/></td>\r\n                                    </tr>\r\n                                </tbody>\r\n                                </Table>\r\n                            </ListGroup>\r\n                            </Form>\r\n                        </Modal.Body>\r\n                        <Modal.Footer>\r\n                        <Button onClick={() => setModalShow(false)}>Close</Button>\r\n                        </Modal.Footer>\r\n                    </Modal>\r\n\r\n\r\n                <Form.Group class=\"formGroup\" controlId=\"playlistName\">\r\n                    <Form.Check label=\"Public Playlist\" onChange={(e) => handlePublic(e.target.checked)}/>\r\n                    <Form.Check label=\"Collaborative Playlist\" onChange={(e) => handleCollab(e.target.checked)}/>\r\n                </Form.Group>\r\n\r\n                <Button variant=\"primary\" type=\"button\" onClick={() => handleSubmit()}>\r\n                    Create Playlist\r\n                </Button>\r\n            </Form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CustomPlaylistForm;"]},"metadata":{},"sourceType":"module"}